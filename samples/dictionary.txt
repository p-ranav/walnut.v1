x := {"a": 5, "b": 3.14, "c": "Hello", "d": false};
x.print();

for k, v in x {
  print(k, ":", v);
}

y := {"value": x};
y["value"]["a"].print(); // 5

z := {
  "test": 5,
  "value" : 
  { 
    "pi": 3.14, 
    "c": "Hello, 世界", 
    "func": function(a, b) { a * b; }
  },
  "test2" : 15
};

pi := "pi";
z["value"][pi].print(); // 3.14

z["value"]["func"](2, 3).print(); // 6

for key, value in z["value"] {
  print(key, ":", value);
}

// func : function(a, b) { a * b; }
// c : Hello, 世界
// pi : 3.14

for pair in z["value"] {
  print(pair);
}

// [func, function(a, b) { a * b; }]
// [c, Hello, 世界]
// [pi, 3.14]

z.print();

thisdict :=	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
};
print(thisdict);

animals := [
    {
        "animal" : {
            "type" : "bunny"
        }
    },
    {
        "animal" : {}
    },
    {}
];

for item in animals { print(item); }

Menu := {
  "PLU" : 234,
  "Salad": {
    "salad": {
        "ceaser":{
            "PLU": 32
        },
        "italian":{
            "PLU": 33
        }
    }
  },
  "Dessert": {
    "cookie": {
      "PLU": 334,
      "NAME": "cookie ",
    }
  },
  "Appetizer": {
    "extra sauce": {
      "PLU": 61,
      "NAME": "extra sauce",
    }
  }
};

Menu.print();

range(10).map(function(i) { i * 2; }).print();

a := {"a": 5, "b": 6, "c": 7};
a["a"] := 4;
a.print();

z := {
  "test": 5,
  "value" : 
  { 
    "pi": 3.14, 
    "c": "Hello, 世界", 
    "func": function(a, b) { a * b; }
  },
  "test2" : 15,
  '世': "Hah!"
};

z["value"]["c"] = "Hello, World!";
z.print();

z['世'].print();

config := {  
  "Component Instances": [  
    {  
      "Name":"client_1_instance",
      "Definition":"client_1.so",
      "Timers":[  
          {  
            "Name":"timer_1",
            "Period":2.0,
            "Priority":50,
            "Function":"call_the_server"
          }
      ],
      "Clients":[  
          {  
            "Name":"client_port",
            "Timeout":2.5,
            "Endpoints":[  
                "tcp://127.0.0.1:5510"
            ]
          }
        ]
      }
    ]
  };

  for instance in config["Component Instances"] {
    "{name} => {definition}".format(
      name = instance["Name"], 
      definition = instance["Definition"]).print();
  }
  // client_1_instance => client_1.so