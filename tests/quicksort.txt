quickSort = function(alist) {
  return quickSortHelper(alist, 0, alist.length() - 1)
}

quickSortHelper = function(alist, first, last) {
  if first < last {
    partition_result = partition(alist, first, last)
    splitpoint = partition_result[0]
    alist = partition_result[1]
    println("Split:", splitpoint)
    alist = quickSortHelper(alist, first, splitpoint - 1)
    alist = quickSortHelper(alist, splitpoint + 1, last)
  }
  return alist
}

partition = function(alist, first, last) {
  pivotvalue = alist[first]

  leftmark = first + 1
  rightmark = last

  done = false
  while not done {
    while leftmark <= rightmark and alist[leftmark] <= pivotvalue { 
      leftmark = leftmark + 1
    }

    while alist[rightmark] >= pivotvalue and rightmark >= leftmark { 
      rightmark = rightmark - 1 
    }

    if rightmark < leftmark { 
      done = true 
    }
    else {
      temp = alist[leftmark]
      alist[leftmark] = alist[rightmark]
      alist[rightmark] = temp
    }
  }

  temp = alist[first]
  alist[first] = alist[rightmark]
  alist[rightmark] = temp
  return [rightmark, alist]
}

alist = [54,26,93,17,77,31,44,55,20]
alist.quickSort().println()