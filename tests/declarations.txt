product: (x, y) ↦ z | x, y, z ∈ int {
  z = x * y;
}

c ∈ int;
c = product(5, 10);

d ∈ {int, float, string};
d = 5;
d = 3.14;
d = "message"; 

e ∈ bool;
e = true;

f, g ∈ [int];
f = [1, 2, 3, 4, 5];
g = map(λ: x ↦ x * x, f);

//------------------------------------------
// ASCII-only variant:
//------------------------------------------

product: (x, y) -> z | x, y, z :: int {
  z = x * y;
}

c :: int;
c = product(5, 10);

d :: {int, float, string};
d = 5;
d = 3.14;
d = "message"; 

e :: bool;
e = true;

f, g :: [int];
f = [1, 2, 3, 4, 5];
g = map(lambda: x -> x * x, f);