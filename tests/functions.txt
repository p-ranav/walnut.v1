product := ƒ(a, b) { return a * b }
print(product(5, 10));

product = function(a, b) {
  return a * b
};

(5).product(10).print();

sum := (a, b) => a + b;
sum(2, 3).print();

[1, 2, 3, 4, 5].map(a => a * 2).print();

[1, 2, 3, 4, 5].filter(a => a % 2 != 0).print();

functions := {
  "sum": (a, b) => a + b,
  "diff": (a, b) => a - b,
  "negate": a => -a,
  "divide": (a, b) => a/b,
};

functions["sum"](2, 3).print(); // 5
functions["diff"](2, 3).print(); // -1
functions["negate"](2).print(); // -2
functions["divide"](2, 3.).print(); // 0.67

apply := function(a, b, c) { c(a, b) };

(5).apply(2, functions["sum"]).print(); // 7

trace := message => { print("TRACE::", end=""); print(message); };
trace("Thread started");

printer := function(text) {
  return () => text.print();
};

my_function := printer("Hey");
my_function();

(() => true)().print(); // true

(() => 50)().print(); // 50


dict := {
  "value" : 
  { 
    "pi": 3.14, 
    "c": "Hello, 世界", 
    "func": function(a, b) { a * b }
  },
};

pi := "pi";
dict["value"][pi].print(); // 3.14

dict["value"]["func"](2, 3).print(); // 6

for key, value in dict["value"] {
  print(key, ":", value)
}

// func : function(a, b) { a * b; }
// c : Hello, 世界
// pi : 3.14

for pair in dict["value"] {
  print(pair)
}

// [func, function(a, b) { a * b; }]
// [c, Hello, 世界]
// [pi, 3.14]